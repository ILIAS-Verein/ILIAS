name: Create Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Write release version
        run: |
          TAG=${{ github.ref_name }}
          VERSION=${TAG#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ./build
      - name: Cleanup directories
        run: |
          cd build/
          rm -r .git
          rm -r .github/
          rm .gitignore
          rm -r CI/
          rm -r tests/
          rm -r test/
          rm -rf Modules/*/test Modules/*/*/test
          rm -rf Services/*/test Services/*/*/test
          rm -r dicto/
          rm .babelrc.json
          rm .eslintrc.json
          rm captainhook.json
          cd ..
      - name: Install dependencies
        uses: php-actions/composer@v6
        with:
          working-directory: ./build
          dev: no
          php_version: 7.4
          version: 2.2.x
          php_extensions: zip gd xsl
      - name: Move build to packaging folder
        run: mv build/ ILIAS-$VERSION
      - name: Pack release zip
        run: zip -ry ./release.zip ILIAS-$VERSION
      - name: Pack release tar
        run: tar -zcvf ./release.tar.gz ILIAS-$VERSION
      - name: MD5sum
        run: |
          md5_zip=($(md5sum release.zip))
          size_zip=($(ls -hs release.zip))
          echo "release.zip [$md5_zip]($size_zip)"
          md5_tar=($(md5sum release.tar.gz))
          size_tar=($(ls -hs release.tar.gz))
          echo "release.tar.gz [$md5_tar]($size_tar)"
          echo "MD5_ZIP=$md5_zip" >> $GITHUB_ENV
          echo "SIZE_ZIP=$size_zip" >> $GITHUB_ENV
          echo "MD5_TAR=$md5_tar" >> $GITHUB_ENV
          echo "SIZE_TAR=$size_tar" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Maintenance release for ILIAS 7.
            More information about the release at https://docu.ilias.de/goto_docu_lm_35.html

            Use the pre-packed files ILIAS-${{ env.VERSION }}.tar.gz(${{ env.SIZE_TAR }}) `${{ env.MD5_TAR }}` or ILIAS-${{ env.VERSION }}.zip(${{ env.SIZE_ZIP }}) `${{ env.MD5_ZIP }}` for download and installing ILIAS and ignore the files offered by GitHub (called 'Source Code') to prevent problems with composer.
          draft: false
          prerelease: false
      - name: Upload Release Asset (ZIP)
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release.zip
          asset_name: ILIAS-${{ env.VERSION }}.zip
          asset_content_type: application/zip
      - name: Upload Release Asset (TAR)
        id: upload-release-asset-tar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release.tar.gz
          asset_name: ILIAS-${{ env.VERSION }}.tar.gz
          asset_content_type: application/x-gtar